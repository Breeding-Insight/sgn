
<%doc>


</%doc>

<%args> 
$datasets
</%args>

<& '/page/page_title.mas', title => "Create Boxplots" &>

<& '/util/import_javascript.mas', classes => ['jquery','d3.d3v4Min','brapi.BrAPI','brapi.BoxPlotter'] &>

<style media="screen">
  .groupBy-div:only-of-type .groupBy-remove{
    display: none;
  }
  .boxplot .infotext{
    opacity: 0;
  }
  .boxplot:hover .infotext{
    opacity: 1;
  }
  #bxplt_result::-webkit-scrollbar {
    -webkit-appearance: none;
    width: 7px;
  }
  #bxplt_result::-webkit-scrollbar-thumb {
      border-radius: 4px;
      background-color: rgba(0,0,0,.5);
      -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5);
  }
  #mainform>div>*, .groupBy-div:not(:first-of-type){
    margin-top: 1em;
    margin-bottom: 0;
  }
</style>

<div class="row">
  <div id="mainform" class="form col-sm-12 form-group">
    <label for="sort" class="control-label">Dataset</label>
    <div>
      <select id="datasetSelect" class="form-control">
        <option value="" disabled selected>Select a Dataset</option>
% foreach my $dataset (@{$datasets}) {
      <option value="<% @{$dataset}[0] %>"><% @{$dataset}[1] %><% (defined @{$dataset}[2])&&@{$dataset}[2]!="undefined"?" - ".@{$dataset}[2]:"" %></option>
% }
      </select>
      <select id="obsunitSelect" class="form-control">
        <option selected value="plot">Plots</option>
        <option value="plant">Plants</option>
      </select>
      <div class="well well-sm"> Note: Constraints other than accessions, traits, trials, locations, and program will be ignored </div>
    </div>
  </div>
</div>

<div class="row">
  <div id="variableSelectDiv" hidden class="form col-sm-12 form-group">
    <label for="sort" class="control-label">Variable</label>
    <select id="variableSelect" class="form-control"></select>
  </div>
</div>

<div id="groupByList" hidden class="row">
  <div class="form col-sm-12 form-group">
    <label for="sort" class="control-label"> Group By </label>
    <div class="groupBy-div">
      <select class="form-control groupBy" style="width:auto; display:inline;">
        <option value="" selected></option>
      </select>
      <a class="btn btn-default groupBy-add" style="margin-top:-1px;">+</a>
      <a class="btn btn-default groupBy-remove" style="margin-top:-1px;">-</a>
    </div>
  </div>
</div>

<div class="row">
  <div class="col-sm-12">
    <div id="bxplt_result_wrapper" class="brapp-wrapper" hidden style="border:solid 1px #ccc;border-radius:4px;">
      <div class="brapp-body" style="background-color:#fff;border-top-left-radius:4px;border-top-right-radius:4px;">
        <div id="bxplt_result" style="max-width: 100%; overflow-x:scroll;"></div>
        <div style="clear:both"></div>
      </div>
      <div class="brapp-footer" style="background-color:#ddd;border-top:solid 1px #ccc;font-family:Arial;color:#555;font-size:11px;padding:0.3em;border-bottom-left-radius:4px;border-bottom-right-radius:4px;">
        <div style="min-height:14px;text-align:right;">
          <a href="https://github.com/solgenomics/BrAPI-BoxPlotter" style="color:inherit;white-space:nowrap;text-decoration:underline;">Phenotype BoxPlotter</a> developed at the <a href="https://btiscience.org/" style="color:inherit;white-space:nowrap;text-decoration:underline;">Boyce Thompson Institute</a>
        </div>
      </div>
    </div>
    <br>
    <div id="downloadBxplt" hidden>
      <a id="downloadBxpltBtn" download="" class="btn btn-default">Download Boxplot SVG</a>
    </div>
  </div>
</div>

<script>
(function(){
  var boxplot = BrAPIBoxPlotter("#bxplt_result");
  function loadDatasetObsUnits(ds,ou){
    var d = {
      'dataset':ds    
    };
    console.log(d);
    $("#variableSelectDiv, #groupByList, #bxplt_result_wrapper, #downloadBxplt").hide();
    $.ajax({
      url : '/ajax/tools/boxplotter/get_constraints',
      type : 'GET',
      data : d,
      dataType:'json',
      success : function(data) {    
        console.log(data);
        var obsUnits = BrAPI("/brapi/v1").phenotypes_search({
          "germplasmDbIds" : data["categories"]["accessions"],
          "observationVariableDbIds" : data["categories"]["traits"],
          "studyDbIds" : data["categories"]["trials"],
          "locationDbIds" : data["categories"]["locations"],
          "programDbIds" : data["categories"]["breeding_programs"],
          "observationLevel" : ou, 
          "pageSize" : 1000
        })
        boxplot.setData(obsUnits);
        obsUnits.all(function(d){
          console.log(d);
        });
        boxplot.getVariables().then(vs=>{
          if(vs.length<1){
            $('#bxplt_result').html('<strong class="not-enough-data">Not Enough Data with the Given Constraints</strong>');
            $("#bxplt_result_wrapper").show();
          }
          else{
            $('#bxplt_result .not-enough-data').remove();
            $("#variableSelectDiv, #groupByList, .brapp-wrapper, #downloadBxplt").show();
          }
        })
        drawVariableSelect();
        drawGroupBys();
        readGrouping();
      }
    });
  }
  function drawVariableSelect(){
    boxplot.getVariables().then(vs=>{
      var vars = d3.select("#variableSelect").selectAll("option").data(vs);
      vars.exit().remove();
      var allVars = vars.enter().append("option")
        .merge(vars)
        .attr("value",d=>d.key)
        .attr("selected",d=>d.key==boxplot.variable?"":null)
        .text(d=>d.value);
    });
    d3.select("#variableSelect").on("change",function(){
      boxplot.setVariable(this.value);
    })
  }
  function drawGroupBys(){
    boxplot.getGroupings().then(grps=>{
      console.log("grps",grps);
      var optSelects = d3.select("#groupByList")
        .selectAll(".groupBy")
        .on("change",function(){
          readGrouping();
        })
        .selectAll('option:not([value=""])')
        .data(d=>grps);
      optSelects.enter().append("option")
        .merge(optSelects)
        .attr("value",d=>d.key)
        .text(d=>d.value.name);
      d3.selectAll(".groupBy-add").on("click",function(){
        $(this.parentNode).clone(true).appendTo(this.parentNode.parentNode);
        drawGroupBys();
        readGrouping();
      });
      d3.selectAll(".groupBy-remove").on("click",function(){
        d3.select(this.parentNode).remove();
        readGrouping();
      });
    });
  }
  function readGrouping(){
    var grouping = [];
    d3.selectAll(".groupBy")
      .each(function(){grouping.push(this.value)})
    boxplot.setGroupings(grouping)
  }
  $("#datasetSelect, #obsunitSelect").change(function(){
    var ds = $("#datasetSelect option:selected").val();
    var ou = $("#obsunitSelect option:selected").val();
    if(ds=="") return;
    loadDatasetObsUnits(ds,ou);
  });
  $("#downloadBxpltBtn").on("mousedown",function(){
    var svg = d3.select("#bxplt_result").select("svg.boxplots").node();
    var serializer = new XMLSerializer();
    var source = serializer.serializeToString(svg);
    if(!source.match(/^<svg[^>]+xmlns="http\:\/\/www\.w3\.org\/2000\/svg"/)){
      source = source.replace(/^<svg/, '<svg xmlns="http://www.w3.org/2000/svg"');
    }
    if(!source.match(/^<svg[^>]+"http\:\/\/www\.w3\.org\/1999\/xlink"/)){
      source = source.replace(/^<svg/, '<svg xmlns:xlink="http://www.w3.org/1999/xlink"');
    }
    source = '<?xml version="1.0" standalone="no"?>\r\n' + source;
    var url = "data:image/svg+xml;charset=utf-8,"+encodeURIComponent(source);
    this.href = url;
  });
  
})();
</script>
