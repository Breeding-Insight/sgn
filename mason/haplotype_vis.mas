<%doc>

=head1 NAME

/haploytype_vis/index.mas

=head1 DESCRIPTION

A component for displaying haplotypes alongside pedigree for accessions

=head1 AUTHOR

Thomas Chan <nm249@cornell.edu>

</%doc>

<& '/util/import_javascript.mas', classes => [ 'brapi.HaplotypeVisualizer', 'brapi.BrAPI', 'CXGN.List', 'd3.d3v4Min', 'd3.d3-pedigree-tree', 'jquery', 'jqueryui'] &>

<& /page/page_title.mas, title=>'Haplotype Visualizer' &>

<div class="row">
    <div class="col-sm-7">
        <div class="brapp-container" style="position:relative;">
          <div value="brapp-wrapper" style="display:inline-block; border:solid 1px #ccc;border-radius:4px; width:100%">
            <div class="brapp-body" style="background-color:#fff;border-top-left-radius:4px;border-top-right-radius:4px;">
              <div style="padding:0.25em;text-align:center;border-bottom:solid 1px #ccc;">
                <span style="white-space:nowrap;"><span class="glyphicon glyphicon-move" aria-hidden="true"></span> Drag to Pan</span> &nbsp;&nbsp; <span style="white-space:nowrap;"><span class="glyphicon glyphicon-zoom-in" aria-hidden="true"></span> Scroll to Zoom</span> &nbsp;&nbsp; <span style="white-space:nowrap;"><span class="glyphicon glyphicon-minus" style="color: #F01E20;" aria-hidden="true"></span> Female Parent</span> &nbsp;&nbsp; <span style="white-space:nowrap;"><span class="glyphicon glyphicon-minus" style="color: #4155DC;" aria-hidden="true"></span> Male Parent</span> &nbsp;&nbsp;
              </div>
              <div id="pdgv-wrap"></div>
              <div style="clear:both"></div>
            </div>
            <div class="brapp-footer" style="background-color:#ddd;border-top:solid 1px #ccc;font-family:Arial;color:#555;font-size:11px;padding:0.3em;border-bottom-left-radius:4px;border-bottom-right-radius:4px;">
              <div style="min-height:14px;text-align:right;">
                <a href="https://github.com/solgenomics/BrAPI-Pedigree-Viewer" style="color:inherit;white-space:nowrap;text-decoration:underline;">Pedigree Viewer</a> developed at the <a href="https://btiscience.org/" style="color:inherit;white-space:nowrap;text-decoration:underline;">Boyce Thompson Institute</a>
              </div>
            </div>
          </div>
        </div>
    </div>
    <div class="col-sm-5">
        <form class="tc-form">
            <h3>Sample</h3>
            <label>Choose sample setting:</label>
            <div class="form-group">
                <div class="sample_select_container">
                    <select class="form-control input-sm" id="sample_select">
                        <option disabled>-- Select Option --</option>
                        <option selected="selected" value="accessions">Accession List</option>
                        <option value="populations">Population</option>
                    </select>
                </div>
                <br>
                <div id="accessions">
                    <div id="select_div_id" type="text"></div>
                </div>
                <div id="populations" style="display: none">
                    <input class="form-control input-sm" placeholder="Search populations..." type="text" id="population_name">
                </div>
                <br>
                <label>Choose a protocol:</label>
                <div id="protocol">
                    <select class="form-control input-sm" id="protocol_select" disabled>
                    </select>
                </div>
            </div>

            <h3>Haplotype</h3>
            <label>Choose markers:</label>
            <div class="form-group" id="marker_form_group">
                <div class="marker_select_container">
                    <button type="button" class="btn btn-sm btn-square btn-primary button clone pull-right" disabled>&plus;</button>
                    <input class="form-control input-sm marker_name" placeholder="Search markers..." type="text" style="width: 88%" onchange="enableGenerator()" disabled>
                    <br>
                </div>
            </div>

        </form>
        <button class="btn btn-primary btn-md" id="generate" disabled>Generate</button>
    </div>
</div>

<script>

/*
 * Accession List Dropdown Module:
 * Displays accession lists given name fragment
 */
var list_obj = new CXGN.List();
var list_html = list_obj.listSelect('select_div_id', ['accessions'], "Select an accession list...");
jQuery('#select_div_id').html(list_html);

/*
 * Population Search Module:
 * Searches populations given name fragment
 */
jQuery('#population_name').autocomplete({
    source: '/ajax/stock/population_autocomplete',
});

/*
 * Accession List Retrieval
 * Is given the type (population or accession list)
 * and recieves the accessions in the form of an array
 */
function retrieve_accession_list(sample_select, callback) {
    var accession_list;
    if (sample_select == "accessions") {
        var accessions = document.getElementById("select_div_id_list_select");
        var list_id = accessions.options[accessions.selectedIndex].value;
        var list_obj = new CXGN.List();
        accession_list = list_obj.transform2Ids(list_id);
        callback(accession_list);
    } else {
        var population = document.getElementById("population_name").value;
        var population_id;
        $.ajax({
            url: '/ajax/haplotype_vis/population_id',
            type: 'POST',
            contentType: 'application/json',
            dataType: 'json',
            data: JSON.stringify({"population": population}),
            beforeSend: function() {
                jQuery('#working_modal').modal('show');
            },
            success: function (data) {
                $.ajax({
                    url: '/ajax/manage_accessions/population_members/'+data.population_id,
                    type: 'GET',
                    dataType: 'json',
                    success: function(data) {
                        accession_list = data.data.map( function(obj) {
                            return obj.stock_id;
                        });
                        callback(accession_list);
                    }
                });
            },
            complete: function() {
                setTimeout(function() {
                    jQuery('#working_modal').modal('hide');
                }, 100);
            },
            error: function() {
                alert("Accession list retrieval failed. Choose different accession/population list.");
            }
        });
    }
}

/*
 * Marker Display Module:
 * Displays genetic marker list for search of
 * marker name fragment and accession list
 */
function retrieve_markers(sample_select) {
    var protocol_select = document.getElementById("protocol_select");
    var protocol_id = protocol_select.options[protocol_select.selectedIndex].value;
    retrieve_accession_list(sample_select, function(accession_list) {
        $('.marker_name').autocomplete({
            min_length: 1,
            delay: 300,
            source: function(request, callback){
               $.ajax({
                    url: '/ajax/haplotype_vis/markers',
                    type: 'POST',
                    contentType: 'application/json',
                    dataType:'json',
                    data: JSON.stringify({"marker_alias_fragment": request.term, "accession_list": accession_list, "protocol": protocol_id}),
                    success: function (data){
                        callback(data.matches);
                    }
                });
            },
            error: function() {
                alert("Marker retrieval failed. Choose different accession/population list or protocol.");
            }
        });
    });
}

/*
 * Duplicate Marker Search Module:
 * Creates another search box when
 * previous marker is selected
 */
jQuery(document).on('click', '.clone, .remove', function(event) {

    if ($(event.target).hasClass('clone')) {
        var sample_select = document.getElementById("sample_select").value;
        var clone = $('.marker_select_container:last').clone();
        clone.find("span").remove();
        clone.find(".marker_name").val("");
        clone.appendTo('#marker_form_group').val("");
        event.target.classList.remove('clone');
        event.target.classList.remove('btn-primary');
        event.target.classList.add('remove');
        event.target.classList.add('btn-danger');
        event.target.innerHTML = "&minus;";
        if (sample_select == "accessions") {
            retrieve_markers("accessions");
        } else {
            retrieve_markers("populations");
        }
    } else {
        $(this).parent().remove();
        var last_button = $('.button:last')[0];
        last_button.classList.remove('remove');
        last_button.classList.remove('btn-danger');
        last_button.classList.add('clone');
        last_button.classList.add('btn-primary');
        last_button.innerHTML = "&plus;";
    }

    if($('.button').length > 6) {
        $('.button').last()[0].classList.remove('clone');
        $('.button').last()[0].classList.remove('btn-primary');
        $('.button').last()[0].classList.add('remove');
        $('.button').last()[0].classList.add('btn-danger');
        $('.button').last()[0].innerHTML = "&minus;";
    }
});

/*
 * Accession/Population Dropdown Module:
 * Displays the second dropdown menu
 * when first dropdown option is selected
 */
jQuery('#sample_select').change(function() {
    var sample_select = document.getElementById("sample_select");
    var value = sample_select.options[sample_select.selectedIndex].value;

    if (value == "accessions") {
        document.getElementById("accessions").style.display = "block";
        document.getElementById("populations").style.display = "none";
        $('.marker_name').val("");
    } else {
        document.getElementById("accessions").style.display = "none";
        document.getElementById("populations").style.display = "block";
        $('.marker_name').val("");
    }
    enableGenerator();
});

/*
 * Enable Protocol Select Module:
 * Allows protocol select to be used when first
 * and second dropdown option are selected
 */
jQuery('#sample_select, #accessions, #populations').change(function() {
    var sample_select = document.getElementById("sample_select").value;
    var accessions = document.getElementById("select_div_id_list_select").value;
    var populations = document.getElementById("population_name").value;
    var protocol_select = document.getElementById("protocol_select");

    if ((sample_select == "accessions" && accessions != "") || (sample_select == "populations" && populations != "")) {
        protocol_select.disabled = false;
        while (protocol_select.firstChild) {
                protocol_select.removeChild(protocol_select.firstChild);
        }
        retrieve_accession_list(sample_select, function(accession_list) {
            accessions = accession_list;
            $.ajax({
                url: '/ajax/haplotype_vis/protocols',
                type: 'POST',
                contentType: 'application/json',
                dataType:'json',
                data: JSON.stringify({"accession_list": accessions}),
                beforeSend: function() {
                    jQuery('#working_modal').modal('show');
                },
                success: function(data) {
                    var element = document.createElement("option");
                    element.disabled = "true";
                    element.selected = "true";
                    element.text = "-- Select Option --";
                    protocol_select.add(element);
                    for(var i = 0; i < data.protocol_array.length; i++) {
                        element = document.createElement("option");
                        element.text =  data.protocol_array[i];
                        element.value =  data.protocol_id_array[i];
                        protocol_select.add(element);
                    }
                },
                complete: function(){
                    setTimeout(function() {
                        jQuery('#working_modal').modal('hide');
                    }, 100);
                },
                error: function() {
                    alert("Protocol retrieval failed.");
                }
            });
        });
    } else {
        protocol_select.disabled = true;
        protocol_select.selected = "";
        while (protocol_select.firstChild) {
            protocol_select.removeChild(protocol_select.firstChild);
        }
    }
    enableGenerator();
});

/*
 * Enable Marker Search Module:
 * Allows marker search to be used when first,
 * second, and third dropdown option are selected
 */
jQuery('#sample_select, #accessions, #populations, #protocol_select').change(function() {
    var sample_select = document.getElementById("sample_select").value;
    var accessions = document.getElementById("select_div_id_list_select").value;
    var populations = document.getElementById("population_name").value;
    var protocol_select = document.getElementById("protocol_select");
    var marker_search = document.getElementsByClassName("marker_name");
    var button = document.getElementsByClassName("button");

    if (sample_select == "accessions" && accessions != "" && protocol_select.selectedIndex != "-1") {
        for (var i = 0; i < marker_search.length; i++) {
            marker_search[i].disabled = false;
            button[i].disabled = false;
        }
        retrieve_markers("accessions");
    } else if(sample_select == "populations" && populations != "" && protocol_select.selectedIndex != "-1") {
        for (var i = 0; i < marker_search.length; i++) {
            marker_search[i].disabled = false;
            button[i].disabled = false;
        }
        retrieve_markers("populations");
    } else {
        for (var i = 0; i < marker_search.length; i++) {
            marker_search[i].disabled = true;
            button[i].disabled = true;
        }
    }
    for (var i = 0; i < marker_search.length; i++) {
        marker_search[i].value = "";
    }
    enableGenerator();
});

/*
 * Enable Generate Module:
 * Allows generate to be used when all
 * dropdown options are selected
 */
function enableGenerator() {
    var count = 0;
    $('.marker_name').each(function() {
        if ($(this).val() != "") {
            count++;
        }
    });
    if (count > 0) {
        document.getElementById('generate').disabled = false;
    } else {
        document.getElementById('generate').disabled = true;
    }
}

/*
 * Generate Viewer Module:
 * Retrieves data and builds
 * haplo-pedigree viewer
 */
var server = "/brapi/v1",
    sgn_url = function(germplasmDbId) {
        return "/stock/"+germplasmDbId+"/view";
    };

var pdg = PedigreeViewer(server, undefined, sgn_url);

jQuery(document).on('click', '#generate', function(){
    jQuery('#working_modal').modal('show');
    try {
        if ($('.pedigreeViewer').length) {
            $('.pedigreeViewer').remove()
        }

        var sample_select = document.getElementById("sample_select").value;
        var accessions;
        var markers = [];
        retrieve_accession_list(sample_select, function(accession_list) {
            accessions = accession_list;

            $('.marker_name').each(function() {
                var value = $(this).val();
                if (value != "") {
                    markers.push(value);
                }
            });

            var germplasms = accessions,
                marker_ids = markers,
                protocol = protocol,
                dom_parent_selector = "div#pdgv-wrap",
                width = 600,
                height = 600;

            var protocol_select = document.getElementById("protocol_select");
            var protocol = protocol_select.options[protocol_select.selectedIndex].value;
            pdg.newTree(germplasms, marker_ids, protocol, function(){
                pdg.drawViewer(dom_parent_selector, width, height);
                jQuery('#working_modal').modal('hide');
            });
        });
    }
    catch(err) {
        jQuery('#working_modal').modal('hide');
    }
});
</script>
