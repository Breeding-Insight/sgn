<%doc>

=head1 NAME

/haploytype_vis/index.mas

=head1 DESCRIPTION

A component for displaying haplotypes alongside pedigree for accessions

=head1 AUTHOR

Thomas Chan <nm249@cornell.edu>

</%doc>

<& '/util/import_javascript.mas', classes => [ 'jquery', 'jqueryui', 'd3.d3v4Min'] &>

<& /page/page_title.mas, title=>'Haplotype Visualizer' &>

<div class="row">
    <div class="col-sm-8">
        <div class="graph">
        </div>
    </div>

    <div class="col-sm-4">

        <form class="tc-form">
            <h3>Sample</h3>
            <div class="form-group">
                <label>Choose sample setting:</label>
                <div class="sample_select_container">
                    <select class="form-control input-sm" id="sample_select">
                        <option selected="selected" disabled="disabled">-- Select Option --</option>
                        <option value="accession">Accession</option>
                        <option value="population">Population</option>
                    </select>
                </div>
                <img hidden id="trials-loading-spinner" src="/img/wheel.gif" alt="loading">

                <br>

                <div class="selected">
                    <div class="accession">
                        <select class="form-control input-sm">
                            <option>Option 1</option>
                            <option>Option 2</option>
                        </select>
                    </div>
                    <div class="population">
                        <select class="form-control input-sm">
                            <option>Option 3</option>
                            <option>Option 4</option>
                        </select>
                    </div>
                </div>
                <img hidden id="results-loading-spinner" src="/img/wheel.gif" alt="loading">
            </div>

            <h3>Haplotype</h3>
            <div class="form-group">
                <label>Choose haplotype:</label>
                <div class="haplotype_select_container">
                    <select class="form-control input-sm" id="haplotype_select">
                        <option selected="selected" disabled="disabled">-- Select Option --</option>
                        <option value="marker_1">Marker 1</option>
                        <option value="marker_2">Marker 2</option>
                    </select>
                </div>
                <img hidden id="trials-loading-spinner" src="/img/wheel.gif" alt="loading">
            </div>
        </form>
    </div>
</div>

<script>

/*
 * Dropdown module
 * Shows/hides second dropdown menu
 * when first dropdown option is selected
 */
$(document).ready(function() {
    $('#sample_select').bind('change', function() {
        var elements = $('div.selected').children().hide(); // hide all the elements
        var value = $(this).val();

        if (value != null) { // if somethings' selected
            elements.filter('.' + value).show(); // show the ones we want
        }
    }).trigger('change');
});

var fragment_params = {"marker_alias_fragment":"s4", "accession_list":[ "38885", "38886", "38887" ]};
request_markers(fragment_params);

/*
 * Request marker module
 * Requests genetic marker list for search of
 * marker name fragment and accession list
 */
function request_markers(data)
{
    fetch('/ajax/haplotype_vis/markers', { body: JSON.stringify(data), method: 'POST', headers: {'content-type': 'application/json'}})
        .then(function(response) {
    	    return response.json();
        })
        .then(function(j) {
            console.log(j);
            draw(j);
        })
        .catch(error => console.error('Error:', error))
}

var svg_container = d3.select("div.graph").append("svg").attr("width", 600).attr("height", 600);

function draw(data) {
    var box = svg_container.selectAll("rect").data(data).enter().append("rect").attr("width", 30).attr("height", "30").style("fill", "black").append("text").text(data);
}


//
// var bunchoheights = [
//     [1,2,16,20,14,9,21],
//     [3,5,8,25],
//     [3,19,5,5,8,25],
//     [6,4,3],
//     [30,22,8,12,3,4]
// ]
//
//
// function draw(data) {
//     var barPadding = 5;
//     var barWidth = (400 / data.length);
//
//     var chart = svg_container.selectAll("rect")
//                              .data(data);
//
//     var chart_enter = chart.enter().append("rect");
//
//     chart.merge(chart_enter)
//          .transition()
//          .attr("y", function(d) {
//             return 200 - d
//          })
//          .attr("height", function(d) {
//             return d;
//          })
//          .attr("width", (400 / data.length) - barPadding)
//          .attr("transform", function (d, i) {
//             var translate = [(400 / data.length) * i, 0];
//             return "translate("+ translate +")";
//         });
//
//     chart.exit().transition().remove();
// }
// bunchoheights.forEach(function(d,i) {
//     setTimeout(function() {
//     draw(d);
//     }, 5000*i);
// });

</script>
